{
  "name": "semantic-release",
  "description": "automated semver compliant package publishing",
  "version": "3.4.1",
  "author": "Stephan BÃ¶nnemann <stephan@boennemann.me>",
  "bin": "./bin/semantic-release.js",
  "bugs": {
    "url": "https://github.com/boennemann/semantic-release/issues"
  },
  "config": {
    "nyc": {
      "exclude": [
        ".tests",
        "node_modules"
      ]
    }
  },
  "dependencies": {
    "abbrev": "^1.0.5",
    "async": "^1.0.0",
    "conventional-changelog": "0.0.17",
    "error-first-handler": "^1.0.1",
    "git-head": "^1.2.1",
    "github": "0.2.4",
    "github-url-from-git": "^1.4.0",
    "ini": "^1.3.2",
    "minimist": "^1.1.0",
    "npmconf": "^2.1.2",
    "parse-github-repo-url": "^1.0.0",
    "request": "^2.53.0",
    "semver": "^4.3.3"
  },
  "devDependencies": {
    "coveralls": "^2.11.2",
    "cracks": "^2.0.1",
    "github-release-fake-server": "^1.3.0",
    "lodash.defaults": "^3.0.0",
    "nano-uid": "^0.2.0",
    "nixt": "^0.4.1",
    "nock": "^2.2.0",
    "nyc": "^2.3.0",
    "sinopia": "^1.0.0",
    "standard": "^4.0.1",
    "tap": "^1.2.0"
  },
  "engines": {
    "iojs": "^1",
    "node": "^0.10",
    "npm": "^2"
  },
  "homepage": "https://github.com/boennemann/semantic-release",
  "keywords": [
    "author",
    "automation",
    "changelog",
    "module",
    "package",
    "publish",
    "release",
    "semver",
    "version"
  ],
  "license": "MIT",
  "main": "dist/main.js",
  "optionalDependencies": {
    "babel": "^5.5.6"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/boennemann/semantic-release.git"
  },
  "scripts": {
    "build": "rm -rf dist && mkdir -p dist && babel src --out-dir dist",
    "build:tests": "rm -rf .tests && mkdir -p .tests && babel tests --out-dir .tests",
    "coverage": "nyc report",
    "coveralls": "npm run coverage -- --reporter=lcovonly && cat coverage/lcov.info | coveralls",
    "postpublish": "./bin/semantic-release.js post",
    "prepublish": "npm run build && ./bin/semantic-release.js pre",
    "pretest:integration": "npm run build && npm run build:tests",
    "test": "./bin/test",
    "test:integration": "nyc tap --no-cov .tests/{scenarios,tap}/*.js",
    "test:style": "standard"
  }
}
